$date
	Mon Nov 22 07:14:29 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_file_tb $end
$var wire 32 ! read_data_2_o [31:0] $end
$var wire 32 " read_data_1_o [31:0] $end
$var wire 32 # a [31:0] $end
$var reg 5 $ addr_1_i [4:0] $end
$var reg 5 % addr_2_i [4:0] $end
$var reg 5 & addr_3_i [4:0] $end
$var reg 1 ' clk $end
$var reg 1 ( reset_i $end
$var reg 32 ) write_data_3_i [31:0] $end
$var reg 1 * write_enable_i $end
$scope module regfile $end
$var wire 32 + a [31:0] $end
$var wire 5 , addr_1_i [4:0] $end
$var wire 5 - addr_2_i [4:0] $end
$var wire 5 . addr_3_i [4:0] $end
$var wire 1 ' clk $end
$var wire 1 ( reset_i $end
$var wire 32 / write_data_3_i [31:0] $end
$var wire 1 * write_enable_i $end
$var reg 32 0 read_data_1_o [31:0] $end
$var reg 32 1 read_data_2_o [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 2 idx [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
b0 1
b0 0
bx /
bx .
bx -
bx ,
bx +
x*
bx )
1(
0'
bx &
bx %
bx $
bx #
b0 "
b0 !
$end
#2
b100000 2
1'
#3
0'
1*
b1 )
b1 /
b0 #
b0 +
b0 &
b0 .
b0 %
b0 -
b0 $
b0 ,
0(
#4
1'
